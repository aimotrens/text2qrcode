name: release

on: 
  push:
    tags:
    - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    container:
        image: golang:1.21
    steps:
    - uses: actions/checkout@v4
    - name: Tests ausfÃ¼hren
      run: |
        go install github.com/swaggo/swag/cmd/swag@v1.16.2
        go mod download
        swag init
        go test ./...

  build-gh-release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
    - name: go vorbereiten
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.5'
    - name: Vars setzen
      id: vars
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Build
      run: |
        mkdir -p release/assets
        go install github.com/swaggo/swag/cmd/swag@v1.16.2
        go mod download
        swag init
        
        GOOS=linux GOARCH=amd64 go build -o release/text2qrcode-linux-amd64
        tar cvfJ release/assets/text2qrcode-linux-amd64.tar.xz release/text2qrcode-linux-amd64

        GOOS=linux GOARCH=arm64 go build -o release/text2qrcode-linux-arm64
        tar cvfJ release/assets/text2qrcode-linux-arm64.tar.xz release/text2qrcode-linux-arm64

        GOOS=windows GOARCH=amd64 go build -o release/text2qrcode-windows-amd64.exe
        zip release/assets/text2qrcode-windows-amd64.zip release/text2qrcode-windows-amd64.exe

        GOOS=windows GOARCH=arm64 go build -o release/text2qrcode-windows-arm64.exe
        zip release/assets/text2qrcode-windows-arm64.zip release/text2qrcode-windows-arm64.exe

        GOOS=darwin GOARCH=amd64 go build -o release/text2qrcode-darwin-amd64
        tar cvfJ release/assets/text2qrcode-darwin-amd64.tar.xz release/text2qrcode-darwin-amd64

        GOOS=darwin GOARCH=arm64 go build -o release/text2qrcode-darwin-arm64
        tar cvfJ release/assets/text2qrcode-darwin-arm64.tar.xz release/text2qrcode-darwin-arm64

    - name: Github-Release erstellen
      uses: ncipollo/release-action@v1
      with:
        artifacts: "release/assets/*"
        tag: ${{ steps.vars.outputs.tag }}

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.REG_USER }}
          password: ${{ secrets.REG_PASS }}

      - uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.REG_USER }}/text2qrcode:${{ steps.vars.outputs.tag }},${{ secrets.REG_USER }}/text2qrcode:latest
