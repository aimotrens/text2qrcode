name: release

on: 
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    container:
        image: golang:1.24@sha256:2b1cbf278ce05a2a310a3d695ebb176420117a8cfcfcc4e5e68a1bef5f6354da
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Tests ausfÃ¼hren
      run: |
        go install github.com/swaggo/swag/cmd/swag@v1.16.2
        go mod download
        swag init
        go test ./...

# ---

  tag-next-version:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_next_version.outputs.version }}
      hasNextVersion: ${{ steps.get_next_version.outputs.hasNextVersion }}
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: '0'
    - name: Get next version
      id: get_next_version
      uses: thenativeweb/get-next-version@main
      with:
        prefix: 'v'
    - name: Create tag
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      run: |
        git tag ${{ steps.get_next_version.outputs.version }}
        git push origin ${{ steps.get_next_version.outputs.version }}


  build-gh-release:
    needs: tag-next-version
    if: ${{ needs.tag-next-version.outputs.hasNextVersion == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: go vorbereiten
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
      with:
        go-version: '1.24.0'
    - name: Vars setzen
      id: vars
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Build
      run: |
        mkdir -p release/assets
        go install github.com/swaggo/swag/cmd/swag@v1.16.2
        go mod download
        swag init
        
        GOOS=linux GOARCH=amd64 go build -o release/text2qrcode-linux-amd64
        tar cvfJ release/assets/text2qrcode-linux-amd64.tar.xz release/text2qrcode-linux-amd64

        GOOS=linux GOARCH=arm64 go build -o release/text2qrcode-linux-arm64
        tar cvfJ release/assets/text2qrcode-linux-arm64.tar.xz release/text2qrcode-linux-arm64

        GOOS=windows GOARCH=amd64 go build -o release/text2qrcode-windows-amd64.exe
        zip release/assets/text2qrcode-windows-amd64.zip release/text2qrcode-windows-amd64.exe

        GOOS=windows GOARCH=arm64 go build -o release/text2qrcode-windows-arm64.exe
        zip release/assets/text2qrcode-windows-arm64.zip release/text2qrcode-windows-arm64.exe

        GOOS=darwin GOARCH=amd64 go build -o release/text2qrcode-darwin-amd64
        tar cvfJ release/assets/text2qrcode-darwin-amd64.tar.xz release/text2qrcode-darwin-amd64

        GOOS=darwin GOARCH=arm64 go build -o release/text2qrcode-darwin-arm64
        tar cvfJ release/assets/text2qrcode-darwin-arm64.tar.xz release/text2qrcode-darwin-arm64

    - name: Github-Release erstellen
      uses: ncipollo/release-action@440c8c1cb0ed28b9f43e4d1d670870f059653174 # v1
      with:
        artifacts: "release/assets/*"
        tag: ${{ needs.tag-next-version.outputs.version }}

        
  build-docker:
    needs: tag-next-version
    if: ${{ needs.tag-next-version.outputs.hasNextVersion == 'true' }}
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3
      - uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3

      - id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          username: ${{ secrets.REG_USER }}
          password: ${{ secrets.REG_PASS }}

      - uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.REG_USER }}/text2qrcode:${{ steps.vars.outputs.tag }},${{ secrets.REG_USER }}/text2qrcode:latest
