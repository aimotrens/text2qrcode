name: release

on: 
  push:
    branches:
      - main

jobs:
  test:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    container:
        image: golang:1.25@sha256:91e2cd436f7adbfad0a0cbb7bf8502fa863ed8461414ceebe36c6304731e0fd9
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - name: Tests ausfÃ¼hren
      run: |
        go install github.com/swaggo/swag/cmd/swag@v1.16.2
        go mod download
        swag init
        go test ./...

# ---

  tag-next-version:
    permissions:
      contents: write
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_next_version.outputs.version }}
      hasNextVersion: ${{ steps.get_next_version.outputs.hasNextVersion }}
    steps:
    - name: Checkout
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      with:
        fetch-depth: '0'
    - name: Get next version
      id: get_next_version
      uses: thenativeweb/get-next-version@main
      with:
        prefix: 'v'
    - name: Create tag
      if: ${{ steps.get_next_version.outputs.hasNextVersion == 'true' }}
      run: |
        git tag ${{ steps.get_next_version.outputs.version }}
        git push origin ${{ steps.get_next_version.outputs.version }}


  build-gh-release:
    permissions:
      contents: write
    needs: tag-next-version
    if: ${{ needs.tag-next-version.outputs.hasNextVersion == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
    - name: go vorbereiten
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
      with:
        go-version: '1.25.0'
    - name: Vars setzen
      id: vars
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Build
      run: |
        mkdir -p release/assets
        go install github.com/swaggo/swag/cmd/swag@v1.16.2
        go mod download
        swag init
        
        GOOS=linux GOARCH=amd64 go build -o release/text2qrcode-linux-amd64
        tar cvfJ release/assets/text2qrcode-linux-amd64.tar.xz release/text2qrcode-linux-amd64

        GOOS=linux GOARCH=arm64 go build -o release/text2qrcode-linux-arm64
        tar cvfJ release/assets/text2qrcode-linux-arm64.tar.xz release/text2qrcode-linux-arm64

        GOOS=windows GOARCH=amd64 go build -o release/text2qrcode-windows-amd64.exe
        zip release/assets/text2qrcode-windows-amd64.zip release/text2qrcode-windows-amd64.exe

        GOOS=windows GOARCH=arm64 go build -o release/text2qrcode-windows-arm64.exe
        zip release/assets/text2qrcode-windows-arm64.zip release/text2qrcode-windows-arm64.exe

        GOOS=darwin GOARCH=amd64 go build -o release/text2qrcode-darwin-amd64
        tar cvfJ release/assets/text2qrcode-darwin-amd64.tar.xz release/text2qrcode-darwin-amd64

        GOOS=darwin GOARCH=arm64 go build -o release/text2qrcode-darwin-arm64
        tar cvfJ release/assets/text2qrcode-darwin-arm64.tar.xz release/text2qrcode-darwin-arm64

    - name: Github-Release erstellen
      uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1
      with:
        artifacts: "release/assets/*"
        tag: ${{ needs.tag-next-version.outputs.version }}

        
  build-docker:
    permissions:
      contents: read
    needs: tag-next-version
    if: ${{ needs.tag-next-version.outputs.hasNextVersion == 'true' }}
    runs-on: ubuntu-latest    
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          username: ${{ secrets.REG_USER }}
          password: ${{ secrets.REG_PASS }}

      - uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.REG_USER }}/text2qrcode:${{ steps.vars.outputs.tag }},${{ secrets.REG_USER }}/text2qrcode:latest
